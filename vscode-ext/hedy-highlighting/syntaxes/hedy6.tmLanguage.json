{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "hedy6",
	"patterns": [
		{
			"name": "invalid.illegal.character.hedy6",
			"match": "\\b_\\b"
		},
		{
			"include": "#errors"
		},
		{
			"name": "comment.line.hedy6",
			"match": "#.*"
		},
		{
			"name": "inline.quoted.conditional.element.hedy6",
			"match": "(?<=\\bif)\\s+(\\w+)\\s+(is|=)\\s+(\\w+)",
			"captures": {
				"1": {
					"name": "string.regexp.hedy6",
					"patterns": [
						{
							"include": "#inside_comp"
						}
					]
				},
				"2": {
					"name": "keyword.command.hedy6"
				},
				"3": {
					"name": "string.regexp.hedy6",
					"patterns": [
						{
							"include": "#inside_comp"
						}
					]
				}
			}
		},
		{
			"include": "#commands"
		},
		{
			"name": "string.quoted.double.hedy6",
			"begin": "\"",
			"end": "\""
		},
		{
			"name": "string.quoted.single.hedy6",
			"begin": "'",
			"end": "'"
		},
		
		{
			"name": "array.hedy6",
			"begin": "(?<=\\b\\w+\\s+(is|=)\\s.*)(?=.*,)",
			"end": "(?=#|$)",
			"patterns": [
				{
					"name": "constant.numeric.hedy6",
					"match": "[0-9]+"
				},
				{
					"name": "string.regexp.hedy6",
					"match": "\\b(\\w+)\\b"
				},
				
				{
					"name": "invalid.illegal.hedy6",
					"match": ",$"
				},
				{
					"name": "keyword.command.comma.separator.hedy6",
					"match": ","
				}
			]
		},
		{ 
			"name": "inline.quoted.array.element.hedy6",
			"begin": "(?<=\\b(remove)\\s)",
			"end": "(?=\\b(from)\\s)",
			"patterns": [
				{
					"name": "constant.numeric.hedy6",
					"match": "[0-9]+"
				},
				{
					"name": "string.regexp.hedy6",
					"match": "\\b(\\w+)\\b"
				}
			]

		},
		{ 
			"name": "inline.quoted.array.element.hedy6",
			"begin": "(?<=\\b(add)\\s)",
			"end": "(?=\\b(to)\\s)",
			"patterns": [
				{
					"name": "constant.numeric.hedy6",
					"match": "[0-9]+"
				},
				{
					"name": "string.regexp.hedy6",
					"match": "\\b(\\w+)\\b"
				}
			]
		},
		{
			"begin": "(?<=\\b(?:is|=)\\s)",
			"end": "(?=#|$)",
			"patterns": [
				
				{
					"match": "(\\w+)[ \\t]+(at)[ \\t]+(random)|(.+)",
					"captures": {
						"2": {
							"name": "keyword.command.hedy6"
						},
						"3": {
							"name": "support.function.hedy6"
						},
						"4": {
							"name": "string.regexp.hedy6",
							"patterns": [
								{
									"include": "#unquoted_phrase"
								},
								{
									"include": "#maths"
								}
							]
						}
					}
				}
			]
		},
		{
			"begin": "(?<=\\bplay\\b)",
			"end": "(?=#|$)",
			"patterns": [
				{
					"name": "support.class.note.hedy6",
					"match": "\\b(?:C[0-9]|D[0-9]|E[0-9]|F[0-9]|G[0-9]|A[0-9]|B[0-9]|[1-7][0-9]|70|[1-9])\\b"
				}
			]
		},
		{
			"name": "constant.numeric.hedy6",
			"match": "[0-9]+"
		},
		{
			"name": "keyword.command.hedy6",
			"match": "\\b(is|at|to|from|in|not)\\b|="
		},
		{
			"include": "#maths"
		},
		{
			"name": "support.function.hedy6",
			"match": "\\b(random)\\b"
		}
	],
	"repository": {
		"commands": {
			"patterns": [
			{
				"name": "keyword.control.conditional.hedy6",
				"match": "\\b(if|else)\\b"
			},
			{
				"name": "support.function.ask.hedy6",
				"match": "\\bask\\b"
			},
			{
				"name": "support.function.clear.hedy6",
				"match": "\\bclear\\b"
			},
			{
				"name": "support.function.print.hedy6",
				"match": "\\bprint\\b"
			},
			{
				"name": "support.function.play.hedy6",
				"match": "\\bplay\\b"
			},
			{
				"name": "support.function.sleep.hedy6",
				"match": "\\bsleep\\b"
			},
			{
				"name": "support.function.add.hedy6",
				"match": "\\badd\\b"
			},
			{
				"name": "support.function.remove.hedy6",
				"match": "\\bremove\\b"
			},
			{
				"name": "invalid.illegal.errorinvalid.hedy6",
				"match": "\\bErrorInvalid\\b"
			},
			{
				"match": "\\b(color)[\\t ]+\\b(blue|green|red|black|brown|gray|orange|pink|purple|white|yellow)\\b",
				"captures": {
					"1": {
						"name": "support.function.turtle.hedy6"
					},
					"2": {
						"name": "support.class.color.hedy6"
					}
				}

			},
			{
				"name": "support.function.turtle.hedy6",
				"match": "\\b(forward|turn)\\b"
			},
			{
				"name": "support.class.pressed.hedy6",
				"match": "\\b(pressed)\\b"
			}
			]
		},
		"errors": {
			"patterns": [
				{
					"name": "invalid.deprecated.echo.hedy6",
					"match": "\\becho\\b"
				},
				{
					"name": "invalid.illegal.errorinvalid.hedy6",
					"match": "\\bErrorInvalid\\b"
				},
				{
					"name": "invalid.illegal.ask.hedy6",
					"match": "^[ \\t]*(?:\\s*\\w+\\s+)?ask\\b(?!\\s*[:]).*"
				},
				{
					"name": "invalid.illegal.at.hedy6",
					"match": "^[ \\t]*(is|=|at|to|from|random).*"
				}
			]
		},
		"inside_comp":{
			"patterns": [
				{
					"name": "support.class.pressed.hedy6",
					"match": "\\bpressed\\b"
				},
				{
					"include": "#unquoted_phrase"
				}
			]
		},
		"maths":{ 
			"patterns": [
				{
					"name": "keyword.command.hedy6",
					"match": "(?<=\\d)[ \\t]*[+\\-*\\/][ \\t]*(?=\\d)"
				},
				{
					"name": "invalid.illegal.math.hedy6",
					"match": "(?<=\\d)[ \\t]*[+\\-*\\/][ \\t]*(?=[\\w\"'])"
				}
			]
		},
		
		"unquoted_phrase":{
			"patterns": [
				
				{
					"name": "comment.line.hedy5",
					"match": "#.*"
				},
				{
					"name": "constant.numeric.hedy6",
					"match": "[0-9]+"
				},
				{
					"name": "string.regexp.hedy6",
					"begin": ".+?(?=#|$)",
					"end": "(?=#|$)"
				}
			]
		}
	},
	"scopeName": "source.hedy6"
}